//PWM. Phase and Frequency Correct
#include <avr/io.h> 
#include <util/delay.h> 
unsigned int DoReMi[8] = {523,587, 659, 698, 783,880, 987, 1046};
int main(void)
{
	unsigned char piano=0;
	DDRB = 0x80; 
	TCCR1A = (TCCR1A | 0x08); // TCCR1A |= 0x08;
	TCCR1B |= 0x11; 
	TCCR1C = 0x00;
	TCNT1 = 0x0000;
	while(1)
	{
		ICR1 = 14745600/DoReMi[piano]; 
		OCR1C = ICR1/2; 
		piano++; 
		if(8 < piano) piano = 0; 
		_delay_ms(1000);
	}
}
/* CTC Mode
#include <avr/io.h>
#include <util/delay.h>

unsigned int DoReMi[8]={523,587,659,698,783,880,987,1046};

int main(void)
{
	unsigned char piano = 0;
	DDRB=0x80;
	TCCR1A=0x04;
	TCCR1B=0x09;
	TCCR1C=0x00;
	TCNT1=0;
	
	
	while (1)
	{
		ICR1=14745600/DoReMi[piano];
		
		OCR1A=ICR1/2;
		piano++;
		if(8<piano) piano = 0;
		_delay_ms(1000);
	}
}
*/
